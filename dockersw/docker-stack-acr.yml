version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-net
    depends_on:
      - ocelotgateway

  ocelotgateway:
    image: <acr-name>.azurecr.io/ocelotgateway:OCELOT_TAG
    ports:
      - "7000:7000"
    networks:
      - app-net
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  servicea:
    image: <acr-name>.azurecr.io/servicea:SERVICEA_TAG
    networks:
      - app-net
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  serviceb:
    image: <acr-name>.azurecr.io/serviceb:SERVICEB_TAG
    networks:
      - app-net
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  servicec:
    image: <acr-name>.azurecr.io/servicec:SERVICEC_TAG
    networks:
      - app-net
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  prometheus:
    image: prom/prometheus
    user: "nobody"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - app-net

  alertmanager:
    image: prom/alertmanager
    user: "nobody"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    networks:
      - app-net

  grafana:
    image: grafana/grafana
    user: "472"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password
    secrets:
      - grafana_admin_password
    ports:
      - "3000:3000"
    networks:
      - app-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-net

  nodeexporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    networks:
      - app-net

  autoscaler:
    build: ./autoscaler
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-net
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock

secrets:
  grafana_admin_password:
    file: ./grafana_admin_password.txt

networks:
  app-net:
    driver: overlay
    attachable: true